{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","address","street","CardList","console","log","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","bind","fetch","then","response","json","users","setState","e","this","target","value","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iVAGaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,mCAAOL,EAAMI,QAAQE,KAArB,OACA,kCAAKN,EAAMI,QAAQG,SACnB,yCAAYP,EAAMI,QAAQI,QAAQC,cCJ7BC,EAAW,SAACV,GAErB,OADAW,QAAQC,IAAIZ,GACL,qBAAKC,UAAU,YAAf,SACDD,EAAMa,SAASC,KAAI,SAAAV,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJhBU,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIhB,UAAU,SACViB,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmDHG,E,kDArDb,aAAc,IAAD,8BACX,gBAGKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IAGf,EAAKL,aAAe,EAAKA,aAAaM,KAAlB,gBATT,E,qDAYb,WAAqB,IAAD,OAClBC,MAAM,8CAELC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEhB,SAAUe,S,0BAG7C,SAAaE,GAAI,IAAD,OAEdC,KAAKF,SAAS,CAAEP,YAAaQ,EAAEE,OAAOC,QAAS,kBAC/CtB,QAAQC,IAAI,EAAKS,Y,oBAIjB,WAAQ,MAM4BU,KAAKV,MAA/BR,EANF,EAMEA,SAAUS,EANZ,EAMYA,YAIZY,EAAmBrB,EAASsB,QAAO,SAAA/B,GAAO,OAC9CA,EAAQE,KAAK8B,cAAcC,SAASf,EAAYc,kBAElD,OACE,sBAAKnC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEe,YAAY,kBACZC,aAAcc,KAAKd,eAErB,cAAC,EAAD,CAAUJ,SAAUqB,W,GA/CVI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4a197509.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        <h2> { props.monster.name } </h2>\r\n        <p> {props.monster.email}</p>\r\n        <p>Street: {props.monster.address.street}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList = (props) => {\r\n    console.log(props);\r\n    return <div className='card-list'>\r\n        { props.monsters.map(monster => (\r\n          <Card key={monster.id} monster={monster} />\r\n          ))}\r\n    </div>};","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input\r\n        className='search' \r\n        type='search' \r\n        placeholder={placeholder} \r\n        onChange={handleChange}\r\n    />                                                                                                             \r\n)","import React from 'react';\nimport './App.css';\nimport { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    // This is an object\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n    // Declare the functipn \n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    //.then(response => console.log(response))\n    .then(response => response.json())\n    .then(users => this.setState({ monsters: users}));\n  }\n\nhandleChange(e) {\n  {/* Show typed input in real-time */}\n  this.setState({ searchField: e.target.value }, () =>\n  console.log(this.state)\n  );\n}\n\n  render(){\n    {/*\n      Equivalent to \n      const monsters = this.state.monsters;\n      const searchField = this.state.searchField;\n    */}\n    const { monsters, searchField } = this.state;\n    {/* Get back a new array by filter, take a name and make it lowercase \n      and .includes to determine whether the array contains certain values and lowercase.\n    */}\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder='Search Monsters'\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters}/>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}